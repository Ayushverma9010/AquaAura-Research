# AquaAura: AI Model Training Script (v3.0 - Corrected & Cleaned)

import numpy as np
import pandas as pd
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
import os

print(f"TensorFlow Version: {tf.__version__}")

# --- 1. Generate and Prepare Data ---
def generate_mock_data(num_samples=2000):
    np.random.seed(42)
    temp = np.random.uniform(15, 35, num_samples)
    humidity = np.random.uniform(40, 90, num_samples)
    light = np.random.uniform(100, 1000, num_samples)
    initial_moisture = np.random.uniform(300, 700, num_samples)

    # Future moisture calculation (corrected)
    future_moisture = (
        initial_moisture
        - (temp - 25) * 5
        - (light - 500) * 0.1
        + (humidity - 60) * 2
        + np.random.normal(0, 25, num_samples)
    )

    future_moisture = np.clip(future_moisture, 100, 800)

    data = pd.DataFrame({
        'temperature': temp,
        'humidity': humidity,
        'light_intensity': light,
        'current_moisture': initial_moisture,
        'future_moisture_target': future_moisture
    })
    return data


dataset = generate_mock_data()
features = ['current_moisture', 'temperature', 'humidity', 'light_intensity']
target = 'future_moisture_target'

X = dataset[features].values
y = dataset[target].values

